### Agentic Bench ###
AGENTIC_BENCH_MODEL_NAME=<text model name eg. "gpt-4o">
AGENTIC_BENCH_MODEL_BASE_URL=<text model base url eg. "https://api.openai.com/v1">
AGENTIC_BENCH_MODEL_API_KEY=<your text model API key>
AGENTIC_BENCH_SUPPORTED_EXECUTORS='["Docker", "Local"]'
AGENTIC_BENCH_EXECUTOR="Local"
# RAG Agent Configuration
LLAMA_API_KEY=<Obtain your API key by visiting LlamaIndex Cloud "https://llamaindex.cloud">
OPENAI_MODEL_NAME=<openai model name eg. "gpt-4o">
OPENAI_API_KEY=<your openai api key>

### Autoscrapper ###
AGENTIC_BROWSER_TEXT_MODEL=<text model name eg. "gpt-4o">
AGENTIC_BROWSER_TEXT_API_KEY=<your text model API key>
AGENTIC_BROWSER_TEXT_BASE_URL=<text model base url eg. "https://api.openai.com/v1">

# Screenshot Analysis Configuration
AGENTIC_BROWSER_SS_ENABLED=<true or false>
AGENTIC_BROWSER_SS_MODEL=<screenshot model name eg. "gpt-4o">
AGENTIC_BROWSER_SS_API_KEY=<your screenshot model API key>
AGENTIC_BROWSER_SS_BASE_URL=<screenshot model base url eg. "https://api.openai.com/v1">
# Google Search Configuration
GOOGLE_API_KEY=<your Custom Search json api>
GOOGLE_CX=<your google custom search engine id>

# Browser Configuration
BROWSER_STORAGE_DIR=<path to browser storage directory eg. "./browser_storage">

### Logging ###
LOGFIRE_TOKEN=<your logfire write token>

### Frontend Websocket Configuration ###
VITE_WEBSOCKET_URL=<your websocket url eg. "ws://localhost:8081/ws">
VITE_MODEL_NAME=${AGENTIC_BENCH_MODEL_NAME} # either use existing ${AGENTIC_BENCH_MODEL_NAME} or give a text model name eg. "gpt-4o"
